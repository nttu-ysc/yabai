#!/usr/bin/env sh
# YABAI STUFF

# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
#
# for this to work you must configure sudo such that
# it will be able to run the command without password

yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

## global settings
yabai -m config external_bar                 off
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          off
## New window spawns to the right if vertical split, or bottom if horizontal split
yabai -m config window_placement             second_child
## floating windows are always on top (default: off)
yabai -m config window_topmost               on
## example: show shadows only for floating windows
yabai -m config window_shadow                on
yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.90
yabai -m config window_border                on          # (on | off)
yabai -m config window_border_width          600
yabai -m config active_window_border_color   0xff00ff00
yabai -m config normal_window_border_color   0xff555555
yabai -m config insert_feedback_color        0xffd75f5f
yabai -m config auto_balance                 on
yabai -m config split_ratio                  0.50
## set mouse interaction modifier key (default: fn)
yabai -m config mouse_modifier               fn
# set modifier + left-click drag to resize window (default: move)
yabai -m config mouse_action1                move
# set modifier + right-click drag to resize window (default: resize)
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            stack

# general space settings
# bsp or float (default: bsp)
yabai -m config layout                       bsp
## Change how yabai looks
yabai -m config top_padding                  14
yabai -m config bottom_padding               14
yabai -m config left_padding                 14
yabai -m config right_padding                14
yabai -m config window_gap                   16

# My custom space names for my 3 monitor setup. These names are used in some of my scripts.
yabai -m space 1 --label one
yabai -m space 2 --label two
yabai -m space 3 --label three
yabai -m space 4 --label four
yabai -m space 5 --label five
yabai -m space 6 --label six
yabai -m space 9 --label nine

# # add 20 padding to the top and 0 padding to the bottom of every space located on the main display
yabai -m config external_bar all:20:0
# yabai -m config external_bar main:20:0
# add 20 pjadding to the top and bottom of all spaces regardless of the display it belongs to
# yabai -m config external_bar all:20:20

# float system preferences. Most of these just diable Yabai form resizing them.
yabai -m rule --add app="^系統設定$" manage=off
yabai -m rule --add app="^System Preferences$" sticky=on layer=above manage=off
yabai -m rule --add app="^System Information$" sticky=on layer=above manage=off
yabai -m rule --add app="^活動監視器$" sticky=on layer=above manage=off
yabai -m rule --add app="^Activity Monitor$" sticky=on layer=above manage=off
yabai -m rule --add app="^LINE$" manage=off
yabai -m rule --add app="^時鐘$" manage=off
yabai -m rule --add app="^Hammerspoon$" manage=off
yabai -m rule --add app="^Finder$" manage=off
yabai -m rule --add app="^計算機$" manage=off
yabai -m rule --add app="^地牛Wake Up!$" manage=off
yabai -m rule --add app="^Calculator$" sticky=on layer=above manage=off
yabai -m rule --add app="^licecap$" sticky=on layer=above manage=off
yabai -m rule --add app="^Alfred Preferences$" sticky=on layer=above manage=off
yabai -m rule --add app="^Telegram$" manage=off

## If I close the active window, focus on any other visible window.
yabai -m signal --add event=window_destroyed action="bash ~/.config/yabai/scripts/windowFocusOnDestroy.sh"

echo "yabai configuration loaded.."

#END
